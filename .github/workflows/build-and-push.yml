# .github/workflows/build-and-push.yml
name: Docker Image Build with BuildKit on ARC

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch: # Allows manual trigger

jobs:
  build:
    runs-on: gh-arc-runner-set # Use your self-hosted ARC runners
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # Use 'endpoint' to connect to your remote BuildKit daemon.
          # This explicitly tells buildx to use the remote daemon,
          # avoiding attempts to connect to a local Docker socket.
          endpoint: tcp://buildkitd-service.buildkit.svc.cluster.local:1234
          # If your BuildKit daemon image is specific, you can provide it here:
          # driver-opts: image=moby/buildkit:latest
          # Optionally, if you have multiple builders, you can specify one:
          # builder: my-remote-builder # Name of the builder created by buildx

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: . # Path to your Dockerfile context
          file: ./Dockerfile # Path to your Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/my-app:latest
            ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/my-app:buildcache # Pull cache from registry
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/my-app:buildcache,mode=max # Push cache to registry
          # For BuildKit's native remote caching with your daemon, you might not need registry cache-from/to
          # if your BuildKit daemon itself has persistent storage and is shared across builds.
          # However, registry caching is still useful for sharing cache with other environments or when the daemon might be ephemeral.
          #
          # For sharing the *daemon's* internal cache, you rely on the persistent volume attached to the buildkitd deployment.
          # If you want to use a specific BuildKit builder instance you created with `docker buildx create`, specify it here:
          # builder: my-remote-builder